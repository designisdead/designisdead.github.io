---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "did-website.didWebsiteNode.fullname" . }}
  labels:
    {{- include "did-website.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.didWebsiteNode.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.didWebsiteNode.name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 50%
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.didWebsiteNode.name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "did-website.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Values.didWebsiteNode.name }}
        image: "{{ .Values.didWebsiteNode.image.repository }}:{{ .Values.didWebsiteNode.image.tag }}"
        imagePullPolicy: {{ .Values.didWebsiteNode.image.pullPolicy }}
        env:
          - name: NODE_ENV
            value: {{ .Values.didWebsiteNode.environment }}
          - name: API_URL
            value: {{ .Values.didWebsiteNode.apiUrl }}
        ports:
        - name: http
          containerPort: 3000
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 2
          failureThreshold: 12
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: 3000
          initialDelaySeconds: 120
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 12
      resources:
        {{- toYaml .Values.resources | nindent 12 }}
    {{- with .Values.nodeSelector }}
    nodeSelector:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
    affinity:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
    tolerations:
      {{- toYaml . | nindent 8 }}
    {{- end }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "did-website.didWebsiteNginx.fullname" . }}
  labels:
    {{- include "did-website.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.didWebsiteNginx.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.didWebsiteNginx.name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.didWebsiteNginx.name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "did-website.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Values.didWebsiteNginx.image.name }}
        image: "{{ .Values.didWebsiteNginx.image.repository }}:{{ .Values.didWebsiteNginx.image.tag }}"
        imagePullPolicy: {{ .Values.didWebsiteNginx.image.pullPolicy }}
        volumeMounts:
          - name: nginx-config-volume

            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
          - name: nginx-logs
            mountPath: /var/log/nginx
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            httpHeaders:
            - name: Host
              value: localhost
            path: /healthcheck
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 6
      - name: dnsmasq
        image: "janeczku/go-dnsmasq:release-1.0.5"
        args:
        - --listen
        - "127.0.0.1:53"
        - --default-resolver
        - --append-search-domains
        - --hostsfile=/etc/hosts
        - --verbose
      - image: designisdead/fluent
        name: fluent
        env:
          - name: FLUENTD_ARGS
            value: -c /etc/td-agent/td-agent.conf
          - name: LOG_GROUP_NAME
            value: {{ .Values.cloudWatchLogGroup }}
          - name: LOG_STREAM_NAME
            value: "did-nginx"
          - name: AWS_REGION
            value: "eu-central-1"
        volumeMounts:
          - name: nginx-logs
            mountPath: /var/log/nginx
          - name: fluent-config-volume
            mountPath: /etc/td-agent
      restartPolicy: Always
      volumes:
        - name: nginx-config-volume
          configMap:
            name: nginx-config
        - name: nginx-logs
          emptyDir: {}
        - name: fluent-config-volume
          configMap:
            name: nginx-fluentd-config

      resources:
        {{- toYaml .Values.resources | nindent 12 }}
    {{- with .Values.nodeSelector }}
    nodeSelector:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
    affinity:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
    tolerations:
      {{- toYaml . | nindent 8 }}
    {{- end }}
